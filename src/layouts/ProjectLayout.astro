---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';
import HeadData from '../components/HeadData.astro';
import Header from '../components/Header.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import { marked } from 'marked';
import contactInfo from '../data/contactInfo';

const { frontmatter } = Astro.props;

// Import all images dynamically
const images = await Promise.all(
    Object.entries(import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/*.{jpg,png,mp4}'))
    .map(async ([path, imageImport]) => {
        const image = await imageImport();
        return { path, image: image.default };
    })
);

// Helper function to find an image by file name
const getImage = (fileName: string) => {
    const found = images.find(img => img.path.endsWith(fileName));
    return found ? found.image : null;
};

console.log("Imported Image Paths:", images.map(img => img.path));
---
<HeadData title={"Adrismate | " + frontmatter.project_title} />
<body>
  <Header />
  <Nav />
  <div class="project">
    <div class="project__blurry-shape-wrapper">
      <div class="project__blurry-shape"></div>
    </div>
    <a class="project__back-btn" href="/">
      <div class="project__back-btn-icon"></div>
      <div class="project__back-btn-text">Projects</div>
    </a>
    <section class="project__top-section">
      <div class="project__cover-wrapper" style="overflow: hidden;">
        <Picture
          class={'project__cover'}
          src={getImage(frontmatter.thumbnail)}
          alt={frontmatter.slug}
          widths={[480, 720, 960, 1000, 1440, 1500, 2000, 2500, 3000, 3500, 4000]}
          sizes={'(max-width: 480px) 480px, (max-width: 720px) 720px, (max-width: 960px) 960px, (max-width: 1000px) 1000px, (max-width: 1440px) 1440px, (max-width: 1500px) 1500px, (max-width: 2000px) 2000px, (max-width: 2500px) 2500px, (max-width: 3000px) 3000px, (max-width: 35000px) 3500px, (max-width: 4000px) 4000px'}
          formats={['avif', 'webp']}
          />
      </div>
      <div class="project__intro-section">
        <h2 class="project__title">{frontmatter.project_title}</h2>
        <div class="project__metadata">
          <p class="project__metadata-text">{frontmatter.tags.map((tag) => tag.replaceAll('-', ' ')).sort().join(' â€” ')}</p>
          <p class="project__metadata-text">{new Date(frontmatter.date).toLocaleDateString('es').replaceAll('/', '-')}</p>
          {frontmatter.client && (
            <p class="project__metadata-text">{frontmatter.client}</p>
          )}
        </div>
        <div class="project__introduction-text" set:html={marked.parse(frontmatter.introduction)}></div>
      </div>
    </section>
    <section class="project__content-section">
      {frontmatter.phases.map((phase) => (
        <div class="project__phase" data-phase-title={phase.title + ' phase' }>
          {phase.sections.map((section) => (
            <div class="project__phase-section">
              {section.text && (
                <div class="project__phase-section-text" set:html={marked.parse(section.text)}></div>
              )}
              <div class="project__phase-section-assets">
                {section?.assets?.map((asset) => (
                  <Fragment>
                    {/* Handle Images */}
                    {asset.type === 'image' && getImage(asset.file_name) ? (
                      <div class={asset.class}>
                        <Picture
                          src={getImage(asset.file_name)}
                          alt={asset.alt}
                          widths={[480, 720, 960, 1440, 2000]}
                          sizes="(max-width: 480px) 480px, (max-width: 720px) 720px, (max-width: 960px) 960px, (max-width: 1440px) 1440px, (max-width: 2000px) 2000px"
                          formats={['avif', 'webp']}
                        />
                      </div>
                    ) : (
                      asset.type === 'image' && <p>Image not found: {asset.file_name}</p>
                    )}

                    {/* Handle Videos */}
                    {asset.type === 'video' && (
                      <video class={asset.class} muted autoplay loop playsinline>
                        <source src={`/src/assets/images/${asset.file_name}`} type="video/mp4" />
                        Your browser does not support the video tag.
                      </video>
                    )}
                  </Fragment>
                ))}
              </div>
            </div>
          ))}
          <span class="project__sticky-element-hidder"></span>
        </div>
      ))}
    </section>
    <section class="project__notes-section">
      <slot />
    </section>
    <section class="project__used-tools">
      {frontmatter.used_tools && (
        <Fragment>
          <h3 class="project__used-tools-title">Tools I used</h3>
          {frontmatter.used_tools.map((tool) => (
            <img
              src={`/icons/icons--software-${tool.replaceAll(' ', '').toLowerCase()}.png`}
              alt={tool.toUpperCase()}>
          ))}
        </Fragment>
      )}
    </section>
    <section class="project__approaching">
      <a class="project__approaching-text-link" href={`mailto:${contactInfo.email}`}>Get in touch</a>
      <button class="project__approaching-btn btn-special"><a href={`mailto:${contactInfo.email}`}>Get in touch</a></button>
    </section>
  </div>
  </section>
  <Footer />
  <div class="dialog__landscape-mode">Please,<br />rotate your device</div>
</body>
<!-- Designed and built with passion by Adrian M. Bandera (Adrismate) -->
</html>
